version: '3.9'

services:
  web:
    build: .
    command: ["sh", "/app/entrypoint.sh"]
    environment:
      ELASTICSEARCH_HOST: http://elastic:9200
    volumes:
      - .:/app
      - ./logs:/var/log/app
    ports:
      - "8000:8000"
    depends_on:
      - db
      - elastic
    networks:
      - elk
      - services
    mem_limit: 1g

  db:
    image: postgres:14
    environment:
      POSTGRES_DB: invoice_db
      POSTGRES_USER: invoice_user
      POSTGRES_PASSWORD: invoice_pass
    volumes:
      - pgdata:/var/lib/postgresql/data/
    ports:
      - "5432:5432"
    networks:
      - services
    mem_limit: 1g

  elastic:
    image: docker.elastic.co/elasticsearch/elasticsearch:9.0.1
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - ELASTIC_PASSWORD=changeme
      - KIBANA_PASSWORD=changeme
    volumes:
      - elasticdata:/var/lib/elasticsearch/data
    ports:
      - "9200:9200"
      - "9300:9300"
    networks:
      - elk
    mem_limit: 0.5g
      
  # kibana:
  #   image: docker.elastic.co/kibana/kibana:9.0.0
  #   environment:
  #     SERVER_NAME: kibana
  #     ELASTICSEARCH_HOST: "http://elastic:9200"
  #   depends_on:
  #     - elastic
  #   ports:
  #     - "5601:5601"
  #   networks:
  #     - elk
  #   mem_limit: 0.25g
  
  filebeat:
    image: docker.elastic.co/beats/filebeat:8.11.1
    container_name: filebeat
    user: root
    volumes:
      - ./services/filebeat/filebeat.yml:/usr/share/filebeat/filebeat.yml:ro
      - ./logs:/var/log/app:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    depends_on:
      - elastic
    command: ["--strict.perms=false"]
    mem_limit: 0.5g

  redis:
    image: redis:7
    ports:
      - "6379:6379"
    networks:
      - services

  celery:
    build: .
    entrypoint: ["/bin/sh", "-c", "chmod 600 InvoiceBrain/.pgpass && chmod 600 InvoiceBrain/.pg_service.conf && celery -A InvoiceBrain worker --loglevel=info"]
    volumes:
      - .:/code
    depends_on:
      - redis
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
    networks:
      - services

  celery-beat:
    build: .
    command: celery -A InvoiceBrain beat --loglevel=info
    volumes:
      - .:/app
    depends_on:
      - redis
      - web
      - celery
    networks:
      - services

  # mailhog:
  #   image: mailhog/mailhog
  #   ports:
  #     - "8025:8025"
  #     - "1025:1025"
  #   networks:
  #     - services

volumes:
  pgdata:
  elasticdata:

networks:
  elk:
  services: